name: Foundry CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit:
    name: Unit & local integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install deps
        run: |
          rm -rf lib
          forge install  OpenZeppelin/openzeppelin-contracts@v5.4.0
          forge install  foundry-rs/forge-std@v1.10.0
      - name: 'Create env file'
        run: |
          echo "testing secrets: ${{ toJson(secrets) }}"
          echo "MAINNET_RPC_URL=${{ secrets.MAINNET_RPC_URL }}" >> .env
          echo "TOKEN_OWNER_PK=${{ secrets.TOKEN_OWNER_PK }}" >> .env
          echo "WETH=${{ secrets.WETH }}" >> .env
          echo "UNIV2_ROUTER=${{ secrets.UNIV2_ROUTER }}" >> .env
          echo "TESTNET_DEPLOYER_PK=${{ secrets.TESTNET_DEPLOYER_PK }}" >> .env
          echo "SEPOLIA_RPC_URL=${{ secrets.SEPOLIA_RPC_URL }}" >> .env
          echo "SEPOLIA_WETH=${{ secrets.SEPOLIA_WETH }}" >> .env
          echo "SEPOLIA_UNIV2_ROUTER=${{ secrets.SEPOLIA_UNIV2_ROUTER }}" >> .env
          echo "FEE_RECIPIENT=${{ secrets.FEE_RECIPIENT }}" >> .env
          echo "FEE_BPS=${{ secrets.FEE_BPS }}" >> .env
          echo "SWAP_FEE_BPS=${{ secrets.SWAP_FEE_BPS }}" >> .env
          echo "FEE_THRESHOLD_WEI=${{ secrets.FEE_THRESHOLD_WEI }}" >> .env
          echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env

      - name: Run local tests (no fork)
        run: forge test --gas-report

  fork:
    name: Mainnet-fork tests
    needs: unit
    runs-on: ubuntu-latest
    env:
      MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install deps
        run: |
          rm -rf lib
          forge install  OpenZeppelin/openzeppelin-contracts@v5.4.0
          forge install  foundry-rs/forge-std@v1.10.0

      # Write a clean .env for Foundry to read
      - name: 'Create env file'
        run: |
          echo "testing secrets: ${{ toJson(secrets) }}"
          echo "MAINNET_RPC_URL=${{ secrets.MAINNET_RPC_URL }}" >> .env
          echo "TOKEN_OWNER_PK=${{ secrets.TOKEN_OWNER_PK }}" >> .env
          echo "WETH=${{ secrets.WETH }}" >> .env
          echo "UNIV2_ROUTER=${{ secrets.UNIV2_ROUTER }}" >> .env
          echo "TESTNET_DEPLOYER_PK=${{ secrets.TESTNET_DEPLOYER_PK }}" >> .env
          echo "SEPOLIA_RPC_URL=${{ secrets.SEPOLIA_RPC_URL }}" >> .env
          echo "SEPOLIA_WETH=${{ secrets.SEPOLIA_WETH }}" >> .env
          echo "SEPOLIA_UNIV2_ROUTER=${{ secrets.SEPOLIA_UNIV2_ROUTER }}" >> .env
          echo "FEE_RECIPIENT=${{ secrets.FEE_RECIPIENT }}" >> .env
          echo "FEE_BPS=${{ secrets.FEE_BPS }}" >> .env
          echo "SWAP_FEE_BPS=${{ secrets.SWAP_FEE_BPS }}" >> .env
          echo "FEE_THRESHOLD_WEI=${{ secrets.FEE_THRESHOLD_WEI }}" >> .env
          echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env

      - name: Run forked tests (Uniswap V2, etc.)
        run: forge test --gas-report -vvv --via-ir
